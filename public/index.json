[{"content":"회로 설계의 기본 전기가 흐르기 위해서는 전위차가 있어야 함. 전위차란, 전기 에너지가 가지는 위치 에너지의 차이로, 전기 에너지가 가지는 위치 에너지가 높은 곳에서 낮은 곳으로 전기가 흐르게 됨. 아두이노의 5V(+)가 높은 위치 에너지 GND(-)가 낮은 위치 에너지를 가짐. 아두이노란? 이탈리아어로 \u0026lsquo;강력한 친구\u0026rsquo; 라는 의미 전기·전자를 손쉽게 공부할 수 있도록 개발된 보드(일종의 컴퓨터)이며 비전공자들도 널리 사용함. 프로그램을 작성해서 보드에 저장할 수 있으며 전원이 인가되는 동안 계속해서 반복 실행함. 브레드보드란? 납땜 없이 동시에 여러 센서를 사용해야 할 때 사용함. 아두이노는 5V를 한 곳에서만 출력하기에 브레드보드를 통해 여러 센서를 병렬로 연결할 수 있음. (모든 센서에 똑같이 5V를 공급) 옴의 법칙 V = I*R\n각각의 센서는 허용되는 전압/전류가 있는데 이를 초과하게 되면 센서가 망가지기 때문에 회로를 잘 설계해 주어야 함. 아두이노의 전압은 일정하므로 (3.3V/5V) 저항(R)을 통해서 흐르는 전류를 조절해 주어야 함. LED 센서 연결 실습 LED 센서의 허용 전류는 20mA(0.02A)이므로 3.3V 전압에 200옴의 저항을 사용하여 허용 전류보다 낮은 16.5mA의 전류를 흐르게 할 수 있음. ($I = 3.3/200$) 5V의 전압을 주는 경우, 300옴의 저항을 사용하여 약 16mA의 전류를 흐르게 할 수 있음. ($I = 5/300$) 저항은 일반적으로 생각하기에 5V → 저항 → LED → GND순으로 연결되어야 할 것 같지만 회로를 인식한 다음에 전기가 흐르기 때문에 5V → LED → 저항 → GND순으로 연결되어도 무방함. 스위치를 통한 회로 제어 회로 사이에 스위치를 끼워주게 된다면 스위치가 눌리지 않은 상태에서는 전위차가 발생하지 않으므로, 스위치가 눌릴 때만 LED가 켜지게 됨. 아두이노를 통한 출력 아두이노 프로그래밍 기초 구조 1 2 3 4 5 6 7 8 9 10 // 전역변수를 선언하고, 사용할 라이브러리를 추가할 수 있음. void setup() { // 한 번만 실행되는 함수임. // 핀모드나 센서의 초기값 등을 설정할 수 있음. } void loop() { // 이후 계속해서 반복 실행되는 한수 } 디지털 출력과 아날로그 출력 두 가지 출력 모두 pinMode(핀 번호, OUTPUT)를 통해 출력을 시작함. 디지털 출력 LOW(0V)와 HIGH(5V) 두 가지의 전압만 내보낼 수 있음. digitalWrite(핀 번호, HIGH/LOW)를 통해서 출력이 이루어짐. 아날로그 출력 디지털 출력이 LOW(0V) 또는 HIGH(5V) 두 가지의 값만 출력할 수 있는 것에 비해 아날로그 출력은 연속적인 값을 출력해낼 수 있음. analogWrite(핀 번호, HIGH/LOW)를 통해서 출력이 이루어짐. 아날로그 출력에서는 analogWrite()를 통해서 0V 또는 5V 값을 내보낼 수 있지만 디지털 출력에서는 digitalWrite()를 통해 0~255의 값을 내보낼 수 없음을 유의하자! 1번 과제를 수행해보자! 1초 간격으로 켜졌다, 꺼졌다를 반복하도록 LED 회로와 아두이노 프로그램을 작성하시오.\ndigitalWrite()함수와 analogWrite()함수는 토글(한번만 작동시켜도 작동 상태가 지속되는 방식)로 작동한다는 점과 delay(시간, 단위는 ms)함수에 유의하자!\n1 2 3 4 5 6 7 8 9 10 11 // 1번 과제 void setup() { pinMode(11, OUTPUT); // 11번 핀을 출력으로 설정 } void loop() { digitalWrite(11, HIGH); // 11번 핀에 5V 전압을 출력 delay(1000); // 1초 대기 digitalWrite(11, LOW); // 11번 핀에 0V 전압을 출력 delay(1000); // 1초 대기 } 2번 과제를 수행해보자! 1번 문제에서 LED가 다시 켜질 때마다 밝기가 약 10%씩 감소하도록 프로그램을 작성하시오.\n1 2 3 4 5 6 7 8 9 10 11 void setup() { pinMode(11, OUTPUT); // 11번 핀을 출력으로 설정 } int a = 250; // a라는 정수형 변수를 선언한 뒤, 250이라는 값을 대입함 void loop() { analogWrite(11, a); // 11번 핀에 a만큼의 전압을 출력 delay(1000); // 1초 대기 a = a-25; // a에서 25만큼을 뺌. 255(5V)의 약 10%는 250 } 3번 과제를 수행해보자! 1초 간격으로 LED 색이 변하도록 회로와 프로그램을 구현하시오. (RGB LED 모듈 사용)\n11번 핀을 빨간색, 9번 핀을 파란색에 연결했다고 가정하자.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 void setup() { pinMode(9, OUTPUT); // 9번 핀을 출력으로 설정 pinMode(11, OUTPUT); // 11번 핀을 출력으로 설정 } void loop() { // 빨간색 출력 digitalWrite(11, HIGH); // 11번 핀에 5V 전압을 출력 delay(1000); // 1초 대기 // 보라색 출력 digitalWrite(11, LOW); // 11번 핀에 0V 전압을 출력 digitalWrite(11, HIGH); // 11번 핀에 5V 전압을 출력 digitalWrite(9, HIGH); // 9번 핀에 5V 전압을 출력 delay(1000); // 1초 대기 // 파란색 출력 digitalWrite(11, LOW); // 11번 핀에 0V 전압을 출력 digitalWrite(9, LOW); // 9번 핀에 0V 전압을 출력 digitalWrite(9, HIGH); // 9번 핀에 5V 전압을 출력 delay(1000); // 1초 대기 // 모든 LED 끄기 digitalWrite(9, LOW); // 9번 핀에 0V 전압을 출력 } 아두이노와의 시리얼 통신 시리얼 통신이란? 아두이노에서는 쉽게 단순히 아두이노와 컴퓨터 간의 통신으로 생각하여도 무방함. 시리얼 입력은 버퍼의 데이터를 확인하여 문자를 하나씩 읽는 것임 시리얼 모니터(Tool -\u0026gt; Serial Monitor)를 통해서 확인할 수 있음. pySerial 라이브러리를 활용하면 파이썬과의 연계도 가능함. 시리얼 통신을 위한 함수들 Serial.begin(통신속도, 보통 9600을 많이 사용함): 시리얼 통신을 시작함. Serial.print(내용), Serial.println(내용): 시리얼 통신을 통해 내용을 출력함. Serial.available(): 버퍼에 있는 데이터의 길이를 바이트 단위로 확인함. Serial.read(): 버퍼에서 문자를 하나 가져옴. Serial.readString(): 버퍼에서 문자열을 가져옴. 1번 과제를 수행해보자! 구구단 중 하나를 시리얼로 출력하시오.\n출력하는 구구단은 2단이다.\n1 2 3 4 5 6 7 8 9 10 11 12 void setup() { Serial.begin(9600); // 9600의 속도로 시리얼 통신을 시작 } int a = 1; // a라는 정수형 변수를 선언한 뒤, 1이라는 값을 대입함 void loop() { while (a \u0026lt; 10) { // a가 10미만일 동안 (2*9 까지만 출력함) Serial.println(2*a); // 2*a의 값을 출력함 a = a+1; // a에 1을 더해줌 } } 2번 과제를 수행해보자! ‘T’, ‘F’ 문자를 시리얼로 입력하면 LED가 켜지고 꺼지도록 회로와 프로그램을 작성하시오.\nLED 모듈은 8번 핀에 연결했다고 가정하자.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 void setup() { pinMode(8, OUTPUT); // 8번 핀을 출력으로 설정 Serial.begin(9600); // 9600의 속도로 시리얼 통신을 시작 } void loop() { if(Serial.available() \u0026gt; 0) { // 버퍼의 데이터 길이 \u0026gt; 0 이면 (=읽을 데이터가 있으면) char c = Serial.read(); // char 자료형의 변수 c를 선언하고 문자 하나를 읽음 if(c == \u0026#39;T\u0026#39;) { // c가 \u0026#39;T\u0026#39;와 같다면 digitalWrite(8, HIGH); // 8번 핀에 5V 전압을 출력 } if(c == \u0026#39;F\u0026#39;) { // C가 \u0026#39;F\u0026#39;와 같다면 digitalWrite(8, LOW); // 8번 핀에 0V 전압을 출력 } } } 아두이노를 통한 입력 디지털 입력과 아날로그 입력 두 가지 입력 모두 pinMode(핀 번호, INPUT)를 통해 입입력을 시작함. 디지털 입력 0V를 LOW, 5V를 HIGH로 인식함. digitalRead(핀 번호)함수를 사용했을 때 HIGH 또는 LOW 값을 읽어냄. 전기가 들어오지 않을 때 digitalRead(핀 번호)함수를 사용하면 Floating 상태(떠있는 상태, 입력핀이 전기적으로 연결되지 않아 불안정한 상태)가 되므로 LOW값과 HIGH값이 임의로 읽어온다. 이를 방지하기 위해 pinMode(핀 번호, INPUT_PULLUP)함수를 통해 풀업 저항을 사용할 수 있다. 풀업 저항을 사용하면 기본적으로 핀이 HIGH 값을 읽어오도록 하고 전기적으로 연결될 때 LOW 값을 읽어오도록 한다. 아날로그 입력 디지털 출력이 LOW(0V) 또는 HIGH(5V) 두 가지의 값만 읽을 수 있는 것에 비해 아날로그 출력은 0부터 1023까지의 연속적인 값을 읽어낼 수 있음. analogWrite(핀 번호)를 통해서 0에서 1023까지의 값을 읽어옴. 조도센서(CDS)란? 밝기에 따라 저항값이 바뀌는 가변저항(반비례, 어두워지면 값이 커짐)임. 밝기에 따라 저항값이 달라지므로 아날로그 신호를 만들 수도 있음. 1번 과제를 수행해보자! 어두워지면 LED가 켜지고, 밝아지면 LED가 꺼지도록 회로와 프로그램을 작성하시오.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void setup() { Serial.begin(9600); // 9600의 속도로 시리얼 통신을 시작 pinMode(A0, INPUT); // A0 핀을 입력으로 설정 pinMode(7, OUTPUT); // 7번 핀을 입력으로 설정 } void loop() { int a = analogRead(A0); // a라는 정수형 변수를 선언한 뒤 A0 핀을 통해 읽어온 값을 대입함 if(a \u0026gt; 300) { // 읽어온 값 a가 300보다 크다면(=어두우면) digitalWrite(7, HIGH); // 7번 핀에 5V 전압을 출력 } if(a \u0026lt; 300) { // 읽어온 값 a가 300보다 작다면(=밝으면) digitalWrite(7,LOW); // 7번 핀에 0V 전압을 출력 } } 아두이노 프로그래밍 일반적인 센서의 사용방법 센서: 저항(220옴, 10K옴 등)을 연결해 주어야 함. (Ex. LED, 조도(빛) 센서 등) 센서 모듈: 저항까지 센서에 포함되어 있어 별도로 저항을 연결하지 않아도 됨. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #include \u0026#34;DHT.h\u0026#34; #include \u0026lt;LiquidCrystal_I2C.h\u0026gt; #define DHTPIN 6 #define DHTTYPE DHT11 DHT dht(DHTPIN, DHTTYPE); LiquidCrystal_I2C lcd(0x27, 16, 2); void setup() { Serial.begin(9600); dht.begin(); // LCD를 초기화 및 백라이트 ON lcd.init(); lcd.backlight(); } void loop() { // 온습도센서(DHT11)를 이용하여 온도와 습도값을 측정하고 LCD에 출력하시오. float humidity = dht.readHumidity(); // 습도 읽기 float temperature = dht.readTemperature(); // 온도 읽기 Serial.print((int)temperature); Serial.print(\u0026#34; *C, \u0026#34;); // 온도값 출력 Serial.print((int)humidity); Serial.println(\u0026#34; %\u0026#34;); // 습도값 출력 String humi = \u0026#34;Humi : \u0026#34;; humi += (String)humidity; humi += \u0026#34;%\u0026#34;; String temp = \u0026#34;temp : \u0026#34;; temp += (String)temperature; temp += \u0026#34;C\u0026#34;; lcd.setCursor(0, 0); lcd.print(humi); lcd.setCursor(0, 1); lcd.print(temp); delay(1500); } 아두이노를 위한 C언어 기초 자료형과 자료구조 파이썬의 자료형 C언어의 자료형 정수 정수 실수 실수 문자열 문자(char) 언뜻 보기에는 큰 차이가 없어보이나 C언어는 문자열이 아닌 문자(char, character의 약자)를 자료형으로 가짐 즉 char에는 하나의 문자만 저장할 수 있음을 의미함. char c = a 따라서 아두이노의 경우 라이브러리를 통해 String을 지원하고 있음. 파이썬의 자료구조 C언어의 자료구조 리스트 배열 딕셔너리 튜플 배열과 리스트와 비슷하지만 자료형에 관계없이 모든 요소를 추가할 수 있는 것에 비해 배열은 동일한 자료형만 저장할 수 있음. 조건문 파이썬의 조건문 문법 elif를 통해서 여러 개의 조건을 확인할 수 있음. 1 2 if 질문 : 질문이 참일 때 실행할 코드 C언어의 조건문 문법 elif 대신 else if를 사용해야 함. switch를 사용할 수도 있음. 1 2 3 if (질문) { 질문이 참일 때 실행할 코드 } 파이썬의 반복문 문법 1 2 3 4 5 6 7 # while문 while 질문 : 질문이 참인 동안 반복할 부분 # for문 for 변수 in 집합 : 변수가 집합의 원소를 순회하며 실행될 코드 C의 반복문 문법 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // while문 while (질문) { 질문이 참인 동안 반복할 부분 } // for문 for (초기값; 질문; 증감식) { 질문이 참인 동안 반복할 부분 } // 예시 | 0 1 2 3 4 출력 for (int i=0; i\u0026lt;5; i=i+1) { Serial.println(i); } 파이썬에서의 함수 생성 1 2 def 함수이름(매개변수) : 실행할 내용 C언어에서의 함수 생성 1 2 3 반환형 함수이름(매개변수) { 실행할 내용 } 파이썬 주석 C언어 주석 # 주석 // 주석 ''' 주석 ''' /* 주석 */ 기타 C의 특징 포인터: 변수를 통해서 메모리 공간에 직접 접근하고 조작할 수 있음. 데이터의 표현이 파이썬에 비해 상대적으로 제한적임 문자를 숫자로 변경하거나 숫자를 문자로 변경할 수 있음 (반대도 가능함, ASCII 코드) 1번 과제를 수행해보자! 시리얼로 문자열을 입력받아, 문자 a의 개수를 세는 프로그램을 작성하시오.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 void setup() { Serial.begin(9600); // 9600의 속도로 시리얼 통신을 시작 } void loop() { int n = 0; // a라는 정수형 변수를 선언한 뒤, 0이라는 값을 대입함 if (Serial.available() \u0026gt; 0) { // 버퍼의 데이터 길이 \u0026gt; 0 이면 (=읽을 데이터가 있으면) char a = Serial.read(); // char 자료형의 변수 c를 선언하고 문자 하나를 읽음 if (a == \u0026#39;a\u0026#39;) { // a가 \u0026#39;a\u0026#39;와 같다면 n = n + 1; // 변수 n에 1을 더함 } } Serial.println(n); // n의 값을 출력함 } 2번 과제를 수행해보자! 문자 ‘A’와 ‘a’를 숫자로 변환하여 출력하시오.\n1 2 3 4 5 6 7 8 9 void setup() { Serial.begin(9600); // 9600의 속도로 시리얼 통신을 시작 } void loop() { Serial.println(\u0026#39;A\u0026#39;); // \u0026#39;A\u0026#39;를 출력함 Serial.println((int)\u0026#39;a\u0026#39;); // 97을 출력함, 정수 변환값 Serial.println((int)\u0026#39;A\u0026#39;); // 65을 출력함, 정수 변환값 } 참고 직렬연결 vs 병렬연결 - 달빛과학 03-1 디지털과 아날로그 신호 - 위키독스 05-3 내부 풀업(Pull-up)저항 사용하기 온습도 센서(모듈)로 온/습도 확인하기\n","permalink":"https://blog.yclk.me/posts/arduino-basic-concept/","summary":"🤖 아두이노의 기초적인 개념을 알아보자","title":"아두이노 기초 (Feat. 전기 전자, 입출력, 시리얼 통신)"},{"content":"안녕하세요! 루크입니다 :) 이번 포스팅에서는 Tailwind CSS에 웹 폰트를 적용하는 방법을 알아보겠습니다. 저는 별도의 웹 서버를 구축한 것은 아니라서 Play CDN을 통해서 Tailwind CSS를 적용했습니다!\n먼저 CSS로 웹 폰트를 추가해 주었습니다. 적용할 폰트는 던파 비트비트체v2와 근본 프리텐다드입니다! 언제나 그렇듯 웹 폰트는 눈누에서 가져왔습니다.\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;style\u0026gt; @font-face{ font-family:\u0026#39;DNFBitBitv2\u0026#39;; font-style:normal;font-weight:400;src:url(\u0026#39;//cdn.df.nexon.com/img/common/font/DNFBitBitv2.otf\u0026#39;)format(\u0026#39;opentype\u0026#39;)} @font-face { font-family: \u0026#39;Pretendard-Regular\u0026#39;; src: url(\u0026#39;https://fastly.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff\u0026#39;) format(\u0026#39;woff\u0026#39;); font-weight: 400; font-style: normal; } \u0026lt;/style\u0026gt; 이제 스크립트의 tailwind.config를 통해서 적용해 주기만 하면 웹 폰트 적용은 끝입니다! sans를 통해 기본 sans-serif글꼴을 프리텐다드로 바꾸었고, bitbit를 통해서 던파 비트비트체를 별도로 정의해 주었습니다.\n1 2 3 4 5 6 7 8 9 10 11 12 \u0026lt;script\u0026gt; tailwind.config = { theme: { extend: { fontFamily: { sans: [\u0026#34;Pretendard-Regular\u0026#34;, \u0026#34;sans-serif\u0026#34;], bitbit: [\u0026#34;DNFBitBitv2\u0026#34;] }, } } } \u0026lt;/script\u0026gt; 모든 과정을 완료해 주었다면 스크립트에서 정의한 이름대로 html에서 폰트를 사용할 수 있게 됩니다! 첫 번째 p태그에는 비트비트체, 두 번째 p태그에는 프리텐다드가 정상적으로 적용된 것을 확인할 수 있습니다 :)\n1 2 \u0026lt;p class=\u0026#34;text-2xl md:text-3xl italic font-bitbit\u0026#34;\u0026gt;Karaoke (a.k.a 오타쿠 노래방 리스트)\u0026lt;/p\u0026gt; \u0026lt;p class=\u0026#34;text-base pb-4 font-sans\u0026#34;\u0026gt;문의: luke@yclk.me\u0026lt;/p\u0026gt; 지금까지 Tailwind CSS에 웹 폰트를 적용하는 방법에 대해서 알아보았습니다! Tailwind를 처음으로 사용하다 보니 기초적인 폰트 적용도 헤매게 되더군요ㅋㅋㅠ 본 포스팅이 Tailwind CSS를 처음으로 사용하시는 분들에게 도움이 되었으면 좋겠습니다 :) 끝까지 봐주셔서 감사합니다! 공감과 댓글은 큰 힘이 됩니다 :D\n","permalink":"https://blog.yclk.me/posts/applying-web-font-on-tailwind-css/","summary":"💻 CDN을 통해 적용한 Tailwind CSS에 웹 폰트를 적용하는 방법","title":"Tailwind CSS 웹 폰트 적용하기"},{"content":"| 리스트란? 비슷한 속성의 변수가 100개 이상이 필요한 프로그램에서는 각각의 변수에 이름을 부여하는 게 아니라 하나의 이름에 번호를 부여하여 문제를 해결할 수 있다.\n변수가 박스 하나라고 본다면, 리스트는 그런 박스들을 여러 개 붙여 놓은 것이라고 할 수 있다. 하지만 리스트는 박스들의 연속 덩어리에만 이름을 정해주고, 값 하나하나는 번호로 호출한다\n리스트는 , 로 구분된 여러 값을 대괄호[ ]로 묶어 표현한다. 리스트는 파이썬의 모든 객체(리스트도 가능함)를 원소로 가질 수 있으며, 빈 리스트도 생성할 수 있다.\n1 리스트이름 = [값1, 값2, 값3] 문자열과 같이, 대괄호를 이용하여 리스트의 원소 각각을 참조할 수 있고(인덱싱) 문자열과 달리, 인덱싱으로 리스트의 원소를 변경할 수 있다.\n+ 연산자로 두 리스트를 연결할 수 있으며 문자열과 같은 방식: 으로 슬라이스 할 수 있다.\nin 연산자로 특정 원소가 리스트에 있는지 확인할 수 있다.\n| 리스트 사용 예시 1 2 # 리스트 a 생성 후 1,2,3 번째 값을 정해준다. a = [2, 13, 7] print(a) 1 2 3 4 5 # 리스트 각각의 값은 인덱스로 불러올 수 있다. a = [1 ,2 ,3 ,4 ,5 ,6 ,7 ,8 ,9] print(a[1]) print(a[8]) 1 2 3 4 5 6 7 8 9 # 생성된 리스트 a의 첫 번째 값과 마지막 값을 바꿔준다. a = [3 , 5 , 6] print(a) a[0] = 15 print(a) a[2] = 1000 print(a) 1 2 3 4 5 # 변수를 문자열로 생성하였을 때, 그 변수는 자동으로 리스트로 생성이 된다. test_string = \u0026#39;hello! python!\u0026#39; print(test_string) print(test_string[0],test_string[1],test_string[2],test_string[3],test_string[4]) | 반복 구조란? 반복 조건의 참/거짓에 따라 동일한 명령이 반복적으로 실행되는 것이다. 다음과 같은 문제는 일일이 해결하기 힘들기에 반복 구조가 필요하다.\n1부터 100까지 합을 구하는 문제 1부터 100까지 전부 출력 해야 하는 문제 반복된 동작으로 해결할 수 있는 문제\n문제를 해결하면서 여러 개의 반복 패턴을 가졌거나, 반복 패턴 안에서 사용되는 변수의 값이 중첩으로 바뀌어야 할 때, 반복문은 중첩하여 사용할 수 있음\n| for 반복문이란? 반복적으로 특정 코드를 실행하게 해주는 루프로, 반복에 사용되는 변수가 존재한다. 루프가 한 번씩 진행될 때마다 루프 변수를 변화 시켜주며, 루프변수의 변화되는 값은 in 뒤에 적혀있는 집합의 값을 참조한다.\n집합의 예시로는 문자열: 문자의 집합, 리스트: 여러 값들의 집합, (텍스트)파일: 줄의 집합이 있음\n1 2 for 루프변수 in 집합 : 반복코드 | for문 사용 예시 1 2 3 # 리스트에 들어있는 0~4까지의 숫자를 차례대로 출력함 for i in [0, 1, 2, 3, 4] : print(i) 1 2 3 # range() 함수로 만든 0~9의 숫자를 차례대로 출력함 for i in range(0, 10) : print(i) 1 2 3 friends = [\u0026#39;Joseph\u0026#39;, \u0026#39;Glenn\u0026#39;, \u0026#39;하늘\u0026#39;] for friend in friends : print(\u0026#34;Hello!\u0026#34;, friend) | range() 함수란? 연속적인 숫자 객체를 만들어서 반환해주는 함수\nrange(A): 0부터 A-1까지의 숫자 객체를 만들어 줌 range(A, B): A부터 B-1까지의 숫자 객체를 만들어 줌 range(A, B, C): A부터 B-1까지의 숫자 객체를 C간격으로 만들어 줌 | range() 함수의 사용 예시 1 2 a = list(range(10)) print(a) 1 2 a = list(range(5, 10)) print(a) 1 2 a = list(range(0, 10, 2)) print(a) range를 list로 바꿔줄 수 있음\n| 대입 연산자란? 오른쪽 항을 왼쪽 항에 대입하기 위해 사용되는 연산자\n종류 정의 = 우항을 좌항에 대입한다. += 좌항과 우항을 더한 값에 좌항에 대입한다. -+ 좌항에서 우항을 뺀 값에 좌항에 대입한다. *= 좌항과 우항을 곱한 후 좌항에 대입한다. **= 우항을 제곱한 후 좌항에 대입한다. /= 좌항을 우항으로 나눈 값을 좌항에 대입한다. //= 좌항을 우항으로 나눈 값의 몫을 좌항에 대입한다. %= 좌항을 우항으로 나눈 값의 나머지를 좌항에 대입한다. 1 2 a = 10 print(a) 1 2 3 a = 10 a += 1 # a = a + 1과 같음 print(a) | while 반복문이란? 조건문의 값이 true일 때, 특정 코드가 실행되는 반복문 즉, 조건문의 값이 false가 되면 루프가 종료된다.\n1 2 while 조건문 : 코드 | while 반복문 사용 예시 1 2 3 # 무한 반복문 while true : 코드 | continue란? 반복문 안에서 사용하는 명령어 continue 아래에 작성된 코드를 실행하지 않고 반복문의 시작(질문)으로 돌아감\n| continue 사용 예시 1 2 3 4 5 # 0부터 9까지의 숫자 중 5를 제외하고 출력함 for i in range(0, 10) : if i == 5 : continue print(i) | break란? 반복문 안에서 사용하는 명령어 반복문을 종료하고 다음 코드로 넘어가는 명령어\n| break 사용 예시 1 2 3 4 5 6 7 # i가 10이 되면 무한 루프를 종료함 i = 0 while true : if i == 10 : break i = i + 1 ","permalink":"https://blog.yclk.me/posts/list-repeat-structure-week2/","summary":"| 리스트란? 비슷한 속성의 변수가 100개 이상이 필요한 프로그램에서는 각각의 변수에 이름을 부여하는 게 아니라 하나의 이름에 번호를 부여하여 문제를 해결할 수 있다.\n변수가 박스 하나라고 본다면, 리스트는 그런 박스들을 여러 개 붙여 놓은 것이라고 할 수 있다. 하지만 리스트는 박스들의 연속 덩어리에만 이름을 정해주고, 값 하나하나는 번호로 호출한다\n리스트는 , 로 구분된 여러 값을 대괄호[ ]로 묶어 표현한다. 리스트는 파이썬의 모든 객체(리스트도 가능함)를 원소로 가질 수 있으며, 빈 리스트도 생성할 수 있다.","title":"2024 SW 아카데미 2주차 | 리스트와 반복 구조"},{"content":"| 입출력이란? 입출력의 기준은 프로그램 또는 컴퓨터이다.\n입력: 프로그램 또는 컴퓨터에 무언가를 주는 것 출력: 프로그램 또는 컴퓨터가 무언가를 주는 것\n| 출력 예제 print 함수를 이용하여 \u0026quot;Hello World!를 출력해보자\n1 print(\u0026#34;Hello World!\u0026#34;) 1 2 3 4 5 6 7 8 # helloworld 출력 print(\u0026#34;hello\u0026#34; + \u0026#34;world\u0026#34;) # hellohellohellohellohellohellohello 출력 print(\u0026#34;hello\u0026#34; * 7) # helloworldworldworldworldworld 출력 print(\u0026#34;hello\u0026#34; + \u0026#34;world\u0026#34; * 5) | 자료형이란? 여러 종류의 데이터형을 식별하는 분류로, 자료형의 종류로는 정수형, 불린형, 문자형, 실수형 등이 있다.\n| 대표적인 자료형 자료형 설명 예시 정수형 정수 숫자를 나타내는 자료형 123, 0, -1 실수형 실수를 나타내는 자료형 3.14 불린 ture, false를 나타내는 자료형 True, False 문자열 문자 하나 또는 문자 조합을 나타내는 자료형 \u0026ldquo;Hello\u0026rdquo;, \u0026ldquo;World\u0026rdquo; | 자료형을 알아내는 법 type() 함수를 활용하여 자료형을 알아낼 수 있다.\n1 2 3 4 5 eee = 3 type(eee) eee = \u0026#39;Hello!\u0026#39; type(eee) | 자료형이 바르지 않을 때 자료형이 일치하지 않을 때, TypeError가 발생한다.\nTypeError는 자료형이 일치하지 않는 두 변수를 연산했을 때 발생한다. 파이썬에서는 컴파일 에러가 아닌 런타임 에러이기에, 작동 전까지는 확인할 수 없다.\n이를 해결하기 위해서는 자료형을 일치 시켜주면 된다. 이렇게 자료형을 변환해주는 것을 **캐스팅(Casting)이라고 한다.\n| TypeError 해결 예시 문제 상황: 정수 10과 문자열 \u0026ldquo;20\u0026quot;을 더하는 경우, TypeError가 발생함\n1 2 3 4 5 6 7 # 1. 10+20을 원하는 경우, \u0026#34;20\u0026#34;을 정수 20으로 바꿔준다 a = 10 b = \u0026#34;20\u0026#34; b = int(b) print(a+b) 1 2 3 4 5 6 7 # 2. \u0026#34;1020\u0026#34;을 원하는 경우, 10을 문자열 \u0026#34;10\u0026#34;으로 바꿔준다 a = 10 b = \u0026#34;20\u0026#34; a = str(a) print(a+b) | 변수란? 변수(variable)는 데이터를 저장할 수 있는 메모리 공간을 의미하며, 변수에 저장된 값은 변경될 수 있다. 쉽게 생각하면 변수는 데이터를 저장하는 상자라고 생각할 수 있다.\n| 변수 생성 예제 1 2 3 4 a = 100 b = \u0026#34;hello\u0026#34; print(a, b) 변수 이름을 지을 때는 다음과 같은 규칙을 지켜야 한다.\n글자나 밑줄로 시작할 수 있다. 글자와 숫자, 밑줄로 이루어진다. 대소문자를 구분한다. 예약어(print등)은 변수 이름으로 사용할 수 없다. | 연산자란? 프로그램의 산술식이나 연산식을 표현하고 처리하기 위해 제공되는 다양한 기호\n| 산술 연산자 종류 의미 + 숫자를 덧셈하거나 문자열을 결합함 - 좌항을 우항으로 뺌(또는 부호 변경) * 숫자를 곱하거나, 문자열을 곱한 수 만큼 반복하여 결합함 ** 좌항을 우항으로 거듭 제곱함 / 좌항을 우항을 나눔(실수형) // 좌항을 우항으로 나눔(정수형) % 좌항을 우항으로 나눈 나머지 | 산술 연산자 사용 예시 1 2 3 4 5 6 7 8 9 10 a = 10 b = 3 print( a + b ) print( a - b ) print( a * b ) print( a ** b ) print( a / b ) print( a // b ) print( a % b ) | 그 외의 연산자 대입 연산자, 비교 연산자, 논리 연산자, 멤버 연산자, 증감 연산자 등이 있다.\n파이썬에서 a = 100은 a가 100이라는 뜻이 아니다. 여기서 =은 대입 연산자로, 변수 a에 숫자 100을 대입한다는 의미를 가진다.\n| 입력이란? 컴퓨터의 사용자가 컴퓨터(프로그램)에 값을 주는 것이다. 키보드로 글이나 숫자를 프로그램에 입력하거나 마우스로 클릭을 하는 행위를 입력이라고 볼 수 있다.\ninput() 함수를 통해서 사용자의 입력을 받을 수 있다. 입력을 받을 때 까지 프로그램은 멈추게 되며, input() 함수는 문자열을 넘겨준다는 특징이 있다.\n1 2 a = input(\u0026#34;변수 a에 할당할 값을 입력하세요. :\u0026#34;) print(\u0026#34;입력한 값은 : \u0026#34;,a, \u0026#34;입니다!\u0026#34;) | 프로그래밍의 구조 순차 구조 순차적으로 프로그램이 실행된다. 선택 구조 조건의 참/거짓에 따라 다른 구조로 실행된다. 반복 구조 조건의 참/거짓에 따라 동일한 명령이 반복적으로 실행된다. | 조건식이란? 명시한 조건이 참인지 거짓인지 판별할 수 있는 것으로, 다음과 같은 내용을 조건식이라 한다.\n지금 현재 키보드의 스페이스 바를 눌렀는가?' 사용자가 입력한 비밀번호가 정확한가? A \u0026gt; 10 ? | 비교 연산자란? 피연산자(숫자)의 크기를 판단하여, 참(true)과 거짓 (false)을 반환한다.\n종류 의미 == 값이 동일하다 != 값이 동일하지 않다 \u0026gt; 왼쪽 값이 오른쪽 값보다 크다 \u0026lt; 왼쪽 값이 오른쪽 값보다 작다 \u0026gt;= 왼쪽 값이 오른쪽 값보다 크거나 동일하다 \u0026lt;= 왼쪽 값이 오른쪽 값보다 작거나 동일하다 1 2 3 4 print( 100 \u0026gt; 10 ) print( 5 == 5 ) print( 5 != 5 ) print( 50 \u0026gt;= 50 ) | if란? 만약 ~라면 이라는 의미로, 조건문이 참이라면 실행하고, 거짓이라면 실행하지 않는다.\n1 2 if 조건식 : 코드 다음 코드는 변수 a가 100보다 큰 경우 \u0026ldquo;a가 100보다 큽니다.\u0026ldquo;를 출력하는 프로그램이다.\n1 2 3 4 a = 200 if a \u0026gt; 100 : print(\u0026#34;변수 a는 100보다 큰 수입니다.\u0026#34;) 다음 코드는 b 의 값이 True인 경우 \u0026ldquo;b의 값은 True입니다.\u0026ldquo;를 출력하는 프로그램이다.\n1 2 if b == True : print(\u0026#34;변수 b의 값은 True입니다.\u0026#34;) | else란? \u0026ldquo;그 외\u0026quot;를 뜻하며, if문과 함께 사용한다. if문 아래에 위치하고 if문의 조건식이 false일 때 실행되는 코드를 작성한다. else문에서는 조건을 적으면 안 된다.\n1 2 3 4 if 조건문 : 코드1 else : 코드2 변수 a가 10보다 크다면 \u0026ldquo;a가 10보다 큽니다.\u0026ldquo;를 출력하고, 아니면 \u0026ldquo;a가 10과 같거나 작습니다.\u0026ldquo;를 출력한다.\n1 2 3 4 if a \u0026gt; 10 : print(\u0026#34;a가 10보다 큽니다.\u0026#34;) else : print(\u0026#34;a가 10과 같거나 작습니다.\u0026#34;) | elif란? else if 의 줄임말로, if 의 조건식에서 false 값이 나온 다음, 새로운 조건식으로 참/거짓을 판별 후 참이 나왔을 때, 특정 코드를 실행한다.\n1 2 3 4 5 if 조건식 : 코드1 elif 조건식2 : 코드2 else : 코드3 1 2 3 4 5 6 7 8 a = int(input(\u0026#34;a의 값을 입력하세요. : \u0026#34;)) if a \u0026gt; 10 : print(\u0026#34;a가 10보다 큽니다.\u0026#34;) elif a == 10 : print(\u0026#34;a는 10입니다.\u0026#34;) else : print(\u0026#34;a가 10보다 작습니다.\u0026#34;) | 논리 연산자란? 참(True) / 거짓(False)을 연산하는 연산자로, 연산의 결과 또한 참(True) / 거짓(False) 중 하나이다.\n연산자 설명 and 논리곱 (둘 다 참일 때만 참을 출력한다) or 논리합 (하나만 참이어도 참을 출력한다) not 논리 부정 ","permalink":"https://blog.yclk.me/posts/variables-selection-structure-week1/","summary":"| 입출력이란? 입출력의 기준은 프로그램 또는 컴퓨터이다.\n입력: 프로그램 또는 컴퓨터에 무언가를 주는 것 출력: 프로그램 또는 컴퓨터가 무언가를 주는 것\n| 출력 예제 print 함수를 이용하여 \u0026quot;Hello World!를 출력해보자\n1 print(\u0026#34;Hello World!\u0026#34;) 1 2 3 4 5 6 7 8 # helloworld 출력 print(\u0026#34;hello\u0026#34; + \u0026#34;world\u0026#34;) # hellohellohellohellohellohellohello 출력 print(\u0026#34;hello\u0026#34; * 7) # helloworldworldworldworldworld 출력 print(\u0026#34;hello\u0026#34; + \u0026#34;world\u0026#34; * 5) | 자료형이란? 여러 종류의 데이터형을 식별하는 분류로, 자료형의 종류로는 정수형, 불린형, 문자형, 실수형 등이 있다.","title":"2024 SW 아카데미 1주차 | 변수와 선택 구조"},{"content":"| 들어가며 안녕하세요! 루크입니다 :) 이번 포스팅에서는 제가 티스토리에서 휴고로 블로그를 이전한 이유와 그 과정에 대해서 포스팅하고자 합니다.\n| 티스토리에서 Hugo로 이전하다 기존에 티스토리 블로그를 사용했던 이유는 매우 단순합니다. 많은 기술 블로그가 티스토리라는 플랫폼을 사용하고 있었고, 제 마음에 들었던 hELLO 라는 테마가 있었기 때문입니다. 하지만 한가지 계속 거슬리는 점이 있었습니다. 바로 티스토리 자체 에디터가 너무나 불편하다는 점이었죠. 자체 에디터에서\u0026rsquo;만\u0026rsquo; 편집한다면 꽤나 편하게 사용할 수 있었지만 다크모드의 부재와 마크다운 언어를 제대로 사용할 수 없다는 점(이건 테마의 문제이긴 합니다만, 마크다운 지원+깔끔한 테마는 찾을 수 없었답니다 ㅜㅜ), 외부에서 글을 복사할 때면 스타일이 깨져 html테그를 뜯거나 메모장을 거쳐야 한다는 점이(사실 이래도 불필요한 태그가 붙어서 거슬립니다..ㅋㅋㅠㅠ) 꽤나 불편했습니다. 글 쓸 시간은 부족한데 매번 이런 스타일 하나 하나까지 신경 쓰는 건 너무나도 힘들 분더러, 글 작성 자체에 초점을 맞추고 싶었습니다.\n결정적으로 지난 카카오 데이터 센터 화재로 인한 장애, 개인 도메인 SSL이 발급 되지 않던 사태 등 아무래도 블로그 만큼은 다른 플랫폼에 의존하기보다 마크다운 기반으로 쉽게 작성이 가능하고 무언가 문제가 생기더라도 다른 플랫폼으로 쉽게 옮겨갈 수 있는, 그런 직접 관리할 수 있는 블로그를 만드는 것이 장기적인 관점으로 보았을 때 좋을 것 같다는 생각이 들었습니다. 그 결과 크게 SSG(Hugo) Ghost/WordPress 정도로 이전하는 게 좋겠다는 생각이 들었는데 최종적으로는 정적 사이트가 훨씬 관리하기 편할 것 같아서 Hugo로 결정했습니다. (티스토리, 고스트, 워드프레스도 아니었는데 깔끔하고 예쁜 테마를 발견했는데요, 그게 Hugo의 PaperMod였습니다!)\n| 블로그 이전기 플랫폼도 정했겠다 본격적인 블로그 이전을 시작했습니다. 평소에 깃을 전혀 안 써서 조금 해맨 부분이 있는데요, 깃허브를 통해 배포하는 경우를 기준으로 설명해 보겠습니다. 크게 YCLK/YCLK_Blog, YCLK/yclk.github.io 두 개의 리포지토리가 필요한데요, YCLK/YCLK_Blog에 모든 파일이 포함된 파일이 올라가고, YCLK/yclk.github.io라는 리포지토리를 서브모듈로 등록하는 구조입니다. Hugo를 통해 빌드를 진행하면 각종 html파일들이 생기는 public폴더가 생기는데 이 파일들이 YCLK/yclk.github.io를 통해 관리되는 것입니다. 단! 이때 배포용 리포지토리만 Readme.md를 생성해 주셔야합니다. 리포지토리 안에 아무 내용도 없으면 정상적으로 submodule 추가가 안됩니다!\n먼저 Hugo를 설치해 줍시다. 여러가지 방법이 있는데 저는 윈도우에서 Chocolatey를 자주 사용하기 때문에 Chocolatey를 활용해 줬습니다.\n1 choco install hugo 1 2 3 # yaml 포맷의 새로운 사이트를 생성 hugo new site \u0026lt;폴더명\u0026gt; --format yaml cd \u0026lt;폴더명\u0026gt; 생성한 경로로 이동 후 깃 사용을 위해 초기화를 해주고 메인 저장소를 remote origin으로 추가합니다\n1 2 3 4 # PaperMod 테마 추가 git init git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod 1 2 # hugo.yaml에 아래 내용 추가 theme: [\u0026#34;PaperMod\u0026#34;] 1 2 3 4 5 # YCLK_Blog 리포지토리 추가 git remote add origin https://github.com/\u0026lt;깃허브 이름\u0026gt;/\u0026lt;블로그 저장 레포\u0026gt;.git git add . git commit -m \u0026#34;\u0026lt;커밋문구\u0026gt;\u0026#34; git push origin master 1 2 3 4 5 6 7 8 9 10 11 12 # yclk.github.io 리포지토리 추가 git submodule add -b main https://github.com/\u0026lt;깃허브 이름\u0026gt;/\u0026lt;웹 배포 레포\u0026gt;.git public cd public git add . git commit -m \u0026#34;\u0026lt;커밋문구\u0026gt;\u0026#34; git push origin main cd .. git add . git commit -m \u0026#34;\u0026lt;커밋문구\u0026gt;\u0026#34; git push origin master 1 2 3 #포스트 생성 및 로컬 확인, post 이름은 달라도 무방하며 posts/dev/python 과 같이 확장할 수도 있음 hugo new post/hello.md hugo server -D 1 2 3 4 5 6 7 8 9 10 # 원격 저장소 업데이트 cd public git add . git commit -m \u0026#34;\u0026lt;커밋 메시지\u0026gt;\u0026#34; git push origin main cd .. git add . git commit -m \u0026#34;\u0026lt;커밋 메시지\u0026gt;\u0026#34; git push origin master 이렇게 업데이트를 한 뒤 https://yclk.github.io로 접속하면 당연하게도(!) 테마가 적용이 되지 않습니다!ㅋㅋㅠ\n당황하지 않고 hugo.yaml의 params \u0026ndash;\u0026gt; assets에 disableFingerprinting을 true로 입력해주면 정상적으로 적용이 되는 것을 알 수 있습니다!\n1 2 3 params: assets: disableFingerprinting: true # 테마 적용 안되는 이슈 해결 | 마치며 기업에서 제공하는 블로그 서비스만 사용하다가 처음으로 SSG를 사용하는 것이라 걱정도 많았고 처음에는 \u0026ldquo;다시 티스토리를 써야하나..\u0026rdquo; 같은 고민도 많았어요. 각자 장단점이 있지만 Hugo에 완벽하게 적응한 지금은 티스토리를 사용할 때보다 훨씬 편하게 포스팅 하고 있습니다! 초반 세팅이 조금 힘들지 그마저도 이런 개발 분야에 관심이 많다면 쉽게 하실 수 있으리라 생각합니다 :)\n특히나 한글 레퍼런스가 많이 없는 Hugo이기에 앞으로도 제 블로그에 적용했던 세팅들을 공유해 보도록 하겠습니다! 끝까지 봐주셔서 감사합니다! 공감과 댓글은 큰 힘이 됩니다 :D\n| 참고 Window에서 Hugo로 Github page 만들고 배포하기\nHugo 오류 ) Theme가 적용이 안되는 문제\nWelcome to the PaperMod\u0026rsquo;s wiki!\nJekyll 블로그에서 Hugo 블로그로 이전 후기\nJekyll 블로그에서 Hugo 블로그로 이전 후기 | Read Markdown View\nDataLama/hugo-blog | hugo 기반의 정적 블로그\nGithub Pages + Hugo를 사용한 블로그 구축기\nhugo + netlify로 블로그 만들기\nhugo로 github.io 블로그 만들기 - 1편\n","permalink":"https://blog.yclk.me/posts/tistory-to-hugo/","summary":"✨ 블로그를 티스토리에서 휴고(Hugo)로 이전하다!","title":"티스토리에서 Hugo로! 나의 블로그 이전기"},{"content":"본 글은 기본적인 해킨토시에 대한 지식은 가지고 있는 분들을 대상으로 작성했습니다. 질문은 언제든지 댓글로 달아주세요 :)\n| 들어가며 안녕하세요! 루크입니다 :) macOS가 필요한 환경은 아니지만 리얼맥은 한 번도 사용해보지 못한 터라 항상 해킨을 하고 싶다는 생각은 있었습니다. 하지만 현재 메인으로 사용하는 시스템은 엔비디아 그래픽 카드를 사용하고 있어 하이 시에라 이상의 OS를 올릴 수 없기에(올릴 수는 있지만 가속이 안되어 실사용이 안됩니다 ㅜ.ㅜ) 이번 포스팅에서는 오픈코어를 사용하여 하이 시에라를 설치하는 과정에 대해서 소개하고자 합니다. 클로버로 시도할 수도 있었겠지만 요즘 대세는 Opencore고 트러블슈팅과 추후 다른 시스템을 구성할 때도 용이할 것 같아 Opencore를 고집했습니다 ㅎㅎ 빅서 이전 가이드는 클로버 부트로더를 사용한 사례나 가이드가 많더라고요 :(\n| 필자의 PC 사양 CPU: Intel i5 3570 M/B: GA-B75M-D3H (rev 1.1) RAM: DDR3 16GB (4GB*4) GPU: Geforce GTX 960 LAN: RTL8111 / Audio: ALC887 참고를 위해 제 PC사양도 함께 첨부했습니다. 하이 시에라는 엔비디아 Maxwell(9XX)에서 Pascal(10XX)까지 지원됩니다. 단, 엔비디아라도 예외적으로 Kepler(6XX, 7XX)는 macOS 11, 빅서까지 지원됩니다 :) | 부팅 USB 만들기 (Feat. macrecovery) 먼저 부팅 USB를 만들어주겠습니다. 카탈리나 이상의 OS를 올릴 때에는 엑스팔육에 올려주시는 고스트를 활용했는데 (이게 제일 간편하기는 합니다) 클로버 기반 자료가 전부라서 부팅이 안되더군요(제가 못하는 것 같기는 합니다ㅋㅋㅋㅠ..) 그래서 Dortania 가이드에 나와있는 macrecovery를 활용하는 방법을 사용했습니다.\nOpencore 폴더 -\u0026gt; Utilities -\u0026gt; macrecovery 경로에 오시면 macrecovery.py 파일이 있는 것을 알 수 있습니다. 눈치채셨겠지만 파이썬이 설치되어 있어야 실행이 가능합니다 :) 하이 시에라는 아래 명령어로 복구 이미지를 다운하시면 됩니다.\n혹시 다운로드가 안되시는 분들을 위해 다운로드한 파일도 압축하여 올려두었습니다 :)\n1 python3 macrecovery.py -b Mac-7BA5B2D9E42DDD94 -m 00000000000J80300 download 다음으로 USB가 부팅되도록 Rufus를 사용하여 포맷하겠습니다.\n사용할 USB를 선택하고 부팅 선택 -\u0026gt; 부팅 불가능, 파티션 구성 -\u0026gt; GPT, 볼륨 레이블 -\u0026gt; 원하는 이름으로 선택합니다.\n포맷한 USB에 다음과 같이 파일을 배치하시면 됩니다. Utility 폴더는 제가 임의로 필요한 유틸리티를 넣은 것입니다 :)\nESP Mounter Pro.app_v1.9.1.zip Hackintool.zip\n| EFI 제작 (Feat. Opencore 0.9.8) 솔직히 EFI 제작은 Dortania 가이드만 정독하셔도 쉽게 제작하실 수 있습니다. 초반에 감을 잡기 힘드시다면 가입이 필요한 커뮤니티이긴 하나 엑스팔육의 글을 참고하시면 좋을 것 같습니다 :)\n아래는 제가 하이 시에라를 설치하면서 config.plist에서 따로 수정했던 부분입니다.\n1차 설치 이후 바로 재부팅되며 Opencore 로그에 \u0026ldquo;00:000 00:000 OCB: LoadImage failed - Unsupported\u0026rdquo; 만 표시되는 문제 발생 config.plist 파일에서 Misc -\u0026gt; Security -\u0026gt; SecureBootModel -\u0026gt; Disabled 로 수정하고 문제없이 진행되었습니다. High Sierra 다시 설치 시도 시 \u0026ldquo;복구 서버에 접속할 수 없습니다\u0026rdquo; 메시지 출력\n유틸리티 -\u0026gt; 터미널에서 아래 명령어 입력하여 해결 (해결은 가능하나 복사 붙어넣기가 되지 않으므로 상대적으로 귀찮음) nvram IASUCatalogURL=\u0026quot;http://swscan.apple.com/content/catalogs/others/index-10.13-10.12-10.11-10.10-10.9-mountainlion-lion-snowleopard-leopard.merged-1.sucatalog\u0026quot; 명령어 안 쓰고 EFI의 config.plist 수정하기 (추천)\nNVRAM -\u0026gt; Add -\u0026gt; 7C436110-AB2A-4BBB-A880-FE41995C9F82 -\u0026gt; -\u0026gt; IASUCatalongURL [String으로 추가] -\u0026gt; http://swscan.apple.com/content/catalogs/others/index-10.13-10.12-10.11-10.10-10.9-mountainlion-lion-snowleopard-leopard.merged-1.sucatalog 입력 엑스팔육에 해당 글을 올렸고 아래 글에서 Fix #3 Change the NVRAM Software Update URL을 참고했습니다. 참고용으로 제가 작업한 EFI도 올려두겠습니다 :) 시리얼은 직접 생성해 주세요!\nEFI-0.9.8_GA-B75M-D3H.zip\n| macOS High Sierra 설치 부팅 전 바이오스 세팅부터 변경해 줍니다. Dortania 가이드를 참고하시면 되지만 저는 동일 보드의 사례를 보고 설정했습니다.\n앞서 제작한 USB로 부팅하게 되면 1.Windows 만 보여서 당황하실 수도 있는데요, 스페이스키를 눌러주시면 [USB 이름] (dmg) 가 표시되는 것을 알 수 있습니다.\n설치할 디스크를 선택하고 (동일 드라이브를 나누어 사용하는 방법도 있기는 한데, 분리하시는 것이 정신건강에 좋습니다) 포맷 -\u0026gt; APFS, 설계 -\u0026gt; GUID 파티션 맵으로 포맷(지우기)해줍니다.\nmacOS 다시 설치를 눌러 각종 약관에 동의하고 포맷한 디스크에 설치합니다.\n1차 재부팅 이후에는 2. macOS Installer를 선택하셔야 합니다.\n그래픽 드라이버는 잡히지 않았지만 하이 시에라가 정상적으로 설치되었습니다 :)\n업데이트가 되지 않은 하이 시에라 버전에 맞는 웹 드라이버가 없기에, 앱스토어로 들어가 받을 수 있는 모든 업데이트를 받아주세요. 업데이트를 하며 재부팅하는 동안에는 macOS Installer로 부팅해 주셔야 합니다.\n토니맥에 들어가 엔비디아 드라이버를 다운해 줍니다. 업데이트를 모두 마쳤으므로 가장 최신 웹드라이버를 받아주시면 됩니다 :)\n재부팅 후, 정상적으로 그래픽 가속이 잡힌 것을 확인하실 수 있습니다.\nEFI 파티션을 마운트 하여 기존 EFI는 지워주고, USB에 있는 EFI를 복사해 줍니다.\n사실 지금 시점에서도 하이 시에라를 메인으로 사용하기에 엄청나게 큰 문제는 없지만 지원이 끊긴 앱들이 많기에 몇몇 실사용에 필요한 앱들이(iWorks, 카톡 등..) 다운이 안될 겁니다. 저도 여러 가지 방법을 찾아봤는데 VMware등을 활용해 가상으로 macOS를 설치하신 뒤 구매 기록을 남기고 구버전으로 다운로드하는 방법밖에는 없더라고요. 특히나 최신 버전 macOS로 갈수록 용량도 커지니 상당히 귀찮은 일이긴 합니다만.. 실사용을 위해서는 어쩔 수가 없습니다 ㅜㅜ 제가 기억하기로는 iMovie였던 것 같은데 특정 앱이 macOS 13.5가 필요해서 소노마를 가상으로 올려 구매 기록을 남겼습니다.\n저는 위 영상을 참고했습니다 :)\n| 마무리 지금까지 오픈코어로 하이 시에라를 설치하는 방법에 대해서 알아보았습니다!ㅎㅎ 아직까지도 엔비디아 그래픽 카드 때문에 하이 시에라를 설치하시는 분들이 꽤나 있는 것 같은데 본 포스팅이 도움이 되었으면 좋겠습니다 :) 언젠가 라데온을 들여온다면 상위 버전으로도 빌드해 보겠습니다. 끝까지 봐주셔서 감사합니다! 공감과 댓글은 큰 힘이 됩니다 :D\n","permalink":"https://blog.yclk.me/posts/macos-high-sierra-hackintosh-guide/","summary":"💻 오픈코어를 활용한 해킨토시 macOS High Sierra (10.13.6) 설치 가이드","title":"macOS High Sierra (10.13.6) 해킨토시 설치 가이드 (Feat. Opencore 0.9.8)"},{"content":"안녕하세요! 루크입니다 :)\n여느 때와 같이 번개장터와 당근마켓을 드나들며 노트북 매물을 찾던 저는 3만원에 올라온 HP Stream 판매글을 발겼했습니다..ㅎㅎ\n셀러론 N2480의 2GB램.. 아무리 리눅스 깔아서 간단한 작업만 할 서브 노트북이라지만.. 3만원에 올라온 멀쩡한 노트북이라는 점에.. 일단 냅다 질러보았습니다..ㅋㅋㅋ\n제가 구매한 모델은 HP 스트림 13-C110TU인데요 셀러론 N2480 / DDR3 2GB / EMMC 32GB의 충격적인 사양에 더 충격적인 Blue 색상을 가진..ㅎㅎ 노트북입니다.\n번개장터에 올라오는 매물들을 보면 보통 5만원 아래로 올라오는 것들은 완전 초창기 아톰 들어간 두꺼운 넷북(\u0026hellip;)에 배터리도 다 방전된 매물이 허다한데 심지어 배터리도 멀쩡하고 기능상의 하자는 없다고 하시더군요..? 혹시 몰라서 배터리 상태도 여쭤봤는데 오..? 설계 용량=최대 충전 용량이더라고요..? 안 살 이유가 없기에..ㅋㅋㅋㅋ 일단 사고 고민하기로 하며.. 샀습니다\n모든 커뮤니티를 돌아다녀도 N 계열 CPU + 2GB 렘은 모두가 뜯어 말리는 조합이지만 전 3만원이라는 가격에 굴복했습니다..ㅎㅎ 거기에 동일 사양의 실제 사용 영상을 본 적이 있는데 생각만큼 느리지는..? 않더라고요 특히나 텍스트 위주의 작업, 동영상 스트리밍 정도의 용도로는요 만약 진짜 못 쓸 정도라도 그냥 치킨값 날린다는 마인드..ㅋㅋ 그렇게 처음 채팅을 남긴 이후로 5일만에 노트북을 제 손에 넣게 되었습니다! 왜 5일이나 걸렸나면요.. 처음에 반택으로 배송 받으려고 했는데 한 번 빠꾸먹고 대한통운으로 다시 받아서 그렇습니다.. 하하 다행이 판매자분이 꼼꼼하게 포장해 주셔서 파손 없이 안전하게 도착했던! 실제로 받아보니 충격적일줄 알았던 파란색도 생각보다 예쁘고.. 정이 가더군요..ㅎㅎ\n판매자분은 윈도우 10 최신 버전을 깔아 놓으셨더라고요! 윈도우 상태도 생각보다 느리지는 않았지만 어차피 이 노트북으로 하는 일은 한정적일테니 그냥 리눅스 깔아서 쓰기로 결심했습니다 ㅎㅎ 저번에 써봤던 Q45는 렘이 1GB인 탓인지 대부분의 OS가 안 깔려서 32bit Lubuntu 구버전을 설치했었는데요 다행이 Stream은 최신버전 Lubuntu가 무난하게 설치되었습니다 :) EMMC 용량만 64GB였어도 멀티 부팅을 고려 했을텐데 32GB는 반 강재로 하나만 깔아서 써야겠더군요..^^\n그렇게 Lubuntu를 깔아서 하루를 사용해 봤습니다..만 무언가 불안정한 느낌이 마음에 들지 않더라고요 뭔가.. 드라이버가 전부 잡히지 않은 느낌이랄까..ㅎㅎ 그래서 그 때부터 그냥 윈도우 8이나 10 구버전을 쓸까싶은 마음도 들었지만 그래도 리눅스를 셋팅해서 쓰는 편이 편하고 더 빠를 것 같다는 생각이 들어서 Elementary OS도 깔아보고 잘 쓰던 Pop_OS!도 깔아봤는데 너무 무거웠고요..^-ㅜ Lxqt보다는 무겁겠거니 하고 Linux Mint Xfce를 깔아봤는데 웬걸 Lubuntu보다 안정적이더라고요? 이러다가 또 다른 배포판으로 옮겨갈 수도 있지만 (Arch로 하나하나 셋팅해 보고 싶기는 합니다..ㅎㅎ) 일단 당분간은 민트에 정착하려고요! :D 다만 거의 모든 배포판에서 발생했던!! BCM43142의 브로드컴 랜/블루투스 드라이버 관련 문제가 있었는데 몇 번의 삽질 끝에! 와이파이의 경우 리눅스 내 추가 드라이버 관련 설정에서 드라이버를 설치해 주면 해결되었고(터미널 명령어로도 가능했습니다) 블루투스는 정말 죽어라 안되다가 아래 명령어로 해결했습니다..ㅎㅎ HP Stream의 경우 유선랜이 없어서 휴대폰 사용하셔서 USB 테더링을 켜주셔야합니다..ㅋㅋㅋㅋㅋㅠ\n1 2 3 4 5 6 7 8 9 10 11 # 와이파이 드라이버 설치 sudo apt install bcmwl-kernel-source # 블루투스 드라이버 설치 cd /lib/firmware/brcm sudo wget https://github.com/winterheart/broadcom-bt-firmware/raw/master/brcm/BCM43142A0-0a5c-216c.hcd # 부팅 시 블루투스 서비스 자동시작 sudo systemctl enable bluetooth.service reboot https://forums.linuxmint.com/viewtopic.php?t=388541 https://forums.linuxmint.com/viewtopic.php?t=359555\n그리고 윈도우에서는 바로 되었던 멀티터치 제스쳐도 다시 잡아줘야 하더군요..ㅎㅎ 아래 글 참고해서 Fusuma도 설치해 보았습니다!\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # input 그룹 생성 newgrp input # user를 input그룹에 추가 sudo gpasswd -a $USER input # libinput-tools 설치 sudo apt install libinput-tools # ruby 설치 sudo apt install ruby # fusuma 설치 sudo gem install fusuma # xdotool 설치 sudo apt install xdotool # 설정 파일 폴더 생성 mkdir -p ~/.config/fusuma # 설정 파일 만들기 vim ~/.config/fusuma/config.yml config.yml 내용\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 swipe: 3: left: command: \u0026#34;xdotool key alt+Right\u0026#34; # History forward right: command: \u0026#34;xdotool key alt+Left\u0026#34; # History back begin: command: xdotool mousedown 1 update: command: xdotool mousemove_relative -- $move_x, $move_y interval: 0.01 accel: 2 end: command: xdotool mouseup 1 4: left: command: \u0026#34;xdotool key ctrl+alt+Right\u0026#34; # Switch Workspace right: command: \u0026#34;xdotool key ctrl+alt+Left\u0026#34; # Switch Workspace pinch: 2: out: command: \u0026#34;xdotool keydown ctrl click 4 keyup ctrl\u0026#34; in: command: \u0026#34;xdotool keydown ctrl click 5 keyup ctrl\u0026#34; threshold: swipe: 0.5 pinch: 0.3 interval: swipe: 0.5 pinch: 0.5 swipe: 3: left: command: \u0026#34;xdotool key alt+Right\u0026#34; # History forward right: command: \u0026#34;xdotool key alt+Left\u0026#34; # History back begin: command: xdotool mousedown 1 update: command: xdotool mousemove_relative -- $move_x, $move_y interval: 0.01 accel: 2 end: command: xdotool mouseup 1 4: left: command: \u0026#34;xdotool key ctrl+alt+Right\u0026#34; # Switch Workspace right: command: \u0026#34;xdotool key ctrl+alt+Left\u0026#34; # Switch Workspace pinch: 2: out: command: \u0026#34;xdotool keydown ctrl click 4 keyup ctrl\u0026#34; in: command: \u0026#34;xdotool keydown ctrl click 5 keyup ctrl\u0026#34; threshold: swipe: 0.5 pinch: 0.3 interval: swipe: 0.5 pinch: 0.5 제가 이 노트북을 구매하여 활용하고자 한 것들은\n문서(과제) 작성 웹 서핑 및 블로그 작성 EBSi등 학습에 사용 음악, 영화, 동영상 등 스트리밍 서비스 활용 Parsec등을 활용한 원격제어 SSH 접속을 통한 서버 관리 정도가 있었습니다 실제로 사용해본 결과! 문서 작성은 Google Docs, Libreoffice, Obsidian을 통해 작성해 보았을 때 텍스트 위주 작업에서는 정말 아무 문제 없이 쾌적하게 작성할 수 있었고 PPT의 경우도 아주 무거운 작업을 하는 것이 아닌 이상 서브 노트북의 용도로는 충분했습니다 ㅎㅎ\n웹서핑의 경우 Firefox를 사용해 진행해 보았는데요 탭을 아주 많이 띄어놓고 하는 게 아니라면 뭐.. 아주 답답하지 않을 정도의 성능을 보여주었습니다 블로그 작성은 평소 티스토리 에디터를 그리..ㅎㅎ 좋아하는 편은 아니라서 마찬가지로 Obsidian에서 작성하고 이를 복사하여 티스토리에 작성해 보았고 큰 문제 없이 매끄럽게 진행할 수 있었습니다 :)\n인터넷 강의 시청의 경우 저는 EBSi만을 사용하기 때문에 플레이어 관련 이슈는 없었고 이미지가 많은 초반 로딩을 제외하면 강의 시청 자체는 쾌적했습니다! 같은 맥락에서 Spotify, Freetube등을 사용했을 때 동영상은 720p는 아주 원활했고 음악 스트리밍도 문제 없었습니다! 블로그 글을 적고있는 지금도 Spotify로 노래를 들으며 작성하고 있습니다 :) 그리고 굳이.. Freetube를 이용한 이유는 그냥 웹 유튜브를 시청해도 되기는하나.. Freetube 같은 써드파티 서비스가 더 쾌적하더군요..ㅎㅎ\nParsec 원격 제어와 Termius를 활용한 SSH 접속도 아무 문제 없이 원활했네요!\n그리고 게임하려고 산 노트북은 아니지만! 게임이 어느 정도로 가능할까 싶어서 스타듀밸리와 Virtual Cottage를 깔아보았는데.. 루분투에서는 그냥 멈춰버리더군요..ㅋㅋㅋㅋㅋ N3xxx + 4GB 램에서는 나름 할만할 정도의 퍼포먼스가 나오던데 이건 그 정도는 아닌가 봅니다..ㅎㅎ 게임은 안 하는 걸로!^^.. 인줄 알았으나..ㅋㅋㅋㅋ 민트에서 최적화하고 실행하니까 실행 너무나도 잘 되었고.. 나름 할만한 정도의 퍼포먼스가 나오더군요!ㅋㅋㅋㅋ..\n아쉬운 점이라면 원래 가격이 그리 높은 제품은 아니라 그런지 만듦새가 그렇게 좋지는 못하다는 점.. 와이파이 5Ghz 와이파이 지원의 부재로 와이파이가 좀 불안정하다는 점.. TN패널의 시야각..(이 점은 이전 노트북도 TN이라서 저에게 큰 단점은 아니기는 합니다..ㅎㅎ) 그리고 이건 이 제품만의 단점은 아닌데 13인치의 괴랄한(?) 키보드 배열에 적응이 필요하다는 점..ㅋㅋㅋ 정도가 있었습니다\n아쉬운 점들도 있었지만 정말 단순한 작업들에서는 아무 문제 없이 사용할 수 있는 x86 머신이 생겼다는 점이 아주 만족스러웠습니다ㅎㅎ 집에 있던 돌덩이(삼성 노트북 5\u0026hellip;) 노트북보다 훨씬 가볍고 팬리스 구조라 조용하다는 점도 마음에 들었고요! 무엇보다도 배터리가 멀쩡한 노트북을 3만원에 샀다는 사실에 아쉬운 점이 보이다가도 3만원이라는 가격이 모든 걸 용서하네요ㅋㅋ\n이 노트북 관련한 정보나 리눅스 사용 관련해서 공유할 내용 있으면 또 다시 포스팅 해보도록 하겠습니다ㅎㅎ 끝까지 봐주셔서 감사합니다! 공감과 댓글은 큰 힘이 됩니다 :D\n","permalink":"https://blog.yclk.me/posts/hp-stream-13-review-in-2024/","summary":"💻 2024년에도 쓸만할까? HP 스트림 13인치 사용 후기","title":"2024년에 쓰는 HP 스트림 13인치 후기"},{"content":"안녕하세요! 루크입니다 :)\n얼마 남지 않은 2023년, 잘 마무리하고 계신가요?\n저는 평소에 주로 태블릿을 활용하여 공부를 하는데요!\n마음에 드는 스터디 플래너가 없어 속상하더군요..ㅋㅋㅋㅋㅋㅠㅠ\n그래서 미루고 미루다가 2023년이 가기 전 완성해 보았습니다!\nPDF/PNG 형태로, 갤럭시탭/아이패드에서 자유롭게 활용하실 수 있을 것 같고\nA4 사이즈로 제작되어 프린트하셔서 사용하셔도 무방할것 같습니다!\n저는 갤럭시탭 + Flexcil 조합으로 사용하고 있네요!ㅎㅎ\n다운로드는 이곳에서 받아주세요! :D\nStudy_Planner_Weekely_By_YCLK.pdf\nStudy_Planner_Weekely_By_YCLK.png\nStudy_Planner_Weekely_By_YCLK.pptx\n기업/개인 자유로운 사용/수정 가능, 무단전제 및 재배포 금지, 제3자에게 재판매 금지\nCopyright ⓒ 루크의 블로그\ncontact.yclk@gmail.com\n","permalink":"https://blog.yclk.me/posts/weekly-study-planner-templete-pdf/","summary":"✍️ 주간 계획 수립에 도움을 주는 스터디 플래너 PDF 양식 공유","title":"일주일을 계획하는 위클리 스터디 플래너 PDF 양식 공유"},{"content":"안녕하세요! 루크입니다 이번 포스팅에선 몇 달 전 기말고사에서도 유용하게 사용한 한문 공부용 안키 템플릿을 공유하려고 합니다 :) (사실상 백업용)\n먼저 한문 문장용 템플릿입니다 적용하면 이런 모습인데요, 한문의 경우 그냥 고딕체로 보게되면 실제 시험이랑 이질감이 좀 많이 들어서 폰트 적용한 한문+음+뜻 이런식으로 구성해 보았습니다 ㅎㅎ\n코드는 앞면, 뒷면, 스타일 순서대로 적어두었습니다\n1 2 3 4 5 \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.googleapis.com\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.gstatic.com\u0026#34; crossorigin\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=Noto+Serif+TC\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;div class=hanja\u0026gt;{{Front}}\u0026lt;/div\u0026gt; 1 2 3 4 5 6 {{FrontSide}} \u0026lt;hr id=answer\u0026gt; \u0026lt;div class=balum\u0026gt;{{Back}}\u0026lt;/div\u0026gt; \u0026lt;div class=meaning\u0026gt;{{Meaning}}\u0026lt;/div\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 @font-face { font-family: \u0026#39;Pretendard-Regular\u0026#39;; src: url(\u0026#39;https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff\u0026#39;) format(\u0026#39;woff\u0026#39;); font-weight: 400; font-style: normal; } .card { font-family: Pretendard-Regular; text-align: center; } .hanja { font-size: 40px; font-family: \u0026#39;Noto Serif TC\u0026#39;, serif; } .balum { font-size: 30px; } .meaning { padding: 5px 0 0 0; font-size: 20px; } 다음으로는 가장 많이 사용하는 한자/한문 어휘를 위한 템플릿 입니다 마찬가지로 적용시에는 이런 모습이며 코드는 앞면, 뒷면, 스타일 순서대로 적어두었습니다\n1 2 3 4 5 \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.googleapis.com\u0026#34;\u0026gt; \u0026lt;link rel=\u0026#34;preconnect\u0026#34; href=\u0026#34;https://fonts.gstatic.com\u0026#34; crossorigin\u0026gt; \u0026lt;link href=\u0026#34;https://fonts.googleapis.com/css2?family=Noto+Serif+TC\u0026amp;display=swap\u0026#34; rel=\u0026#34;stylesheet\u0026#34;\u0026gt; \u0026lt;div class=hanja\u0026gt;{{Front}}\u0026lt;/div\u0026gt; 1 2 3 4 5 6 {{FrontSide}} \u0026lt;hr id=answer\u0026gt; \u0026lt;div class=balum\u0026gt;{{Back}}\u0026lt;/div\u0026gt; \u0026lt;div class=meaning\u0026gt;{{Meaning}}\u0026lt;/div\u0026gt; 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 @font-face { font-family: \u0026#39;Pretendard-Regular\u0026#39;; src: url(\u0026#39;https://cdn.jsdelivr.net/gh/Project-Noonnu/noonfonts_2107@1.1/Pretendard-Regular.woff\u0026#39;) format(\u0026#39;woff\u0026#39;); font-weight: 400; font-style: normal; } .card { font-family: Pretendard-Regular; text-align: center; } .hanja { font-size: 40px; font-family: \u0026#39;Noto Serif TC\u0026#39;, serif; } .balum { font-size: 30px; } .meaning { padding: 5px 0 0 0; font-size: 20px; } 저는 이렇게 자주 사용했는데 필요에 따라 자유롭게 변형하시면 유용하게 사용할 수 있지 않을까 싶네요ㅎㅎ 평소 공부할 때 안키 정말 유용하게 사용하고 있는데 앞으로 안키 팁도 여러개 올려보도록 하겠습니다!ㅋㅋㅋ\n끝까지 봐주셔서 감사합니다! 공감과 댓글은 큰 힘이 됩니다 :D\n","permalink":"https://blog.yclk.me/posts/anki-chinese-character-templete/","summary":"💻 한문 학습에 최적화된 Anki 템플릿 공유","title":"Anki 한문 템플릿 공유"},{"content":"안녕하세요! 루크입니다\n집 근처에 삼성 SENS Q45 노트북이 버려져있었어요. 작동이 되는지 궁금해 가져와봤는데 붙어있는 스티커로 보니 원래는 윈도우 비스타가 깔려있던 걸로 보여요. 노트북을 켜보니 윈도우 8이 설치 되어있었는데 생각보다? 빠릿하더군요..ㅋㅋㅋ\n저는 XP -\u0026gt; 7 -\u0026gt; 8.1 -\u0026gt; 10 -\u0026gt; 11 를 거치면서 써왔는데 사양이 낮음에도 불구하고 윈도우8이 생각보다 잘 쾌적하게 돌아가는게 너무 신기하더라고요?ㅋㅋㅋ\n생각보다 윈도우8이 최적화가 잘 된 OS구나 싶은 생각이 들었습니다.\n그냥 깔려있던 8 그대로 쓸까도 싶었지만 IE 지원 종료 + 윈도우8 지원 종료이다보니 뭔가 하려면 많이 귀찮아질 것 같다는 생각이 들더군요.\n그래서 그냥 리눅스 깔아서 간단하게 써볼 생각을 하고 리눅스 배포판을 찾기 시작했습니다\u0026hellip;만 이 노트북이 충격적인 T7100에 램 1G(!) 의 충격적인 사양을 가지고 있던터라 원래 Ventoy USB에 가지고 있던 배포판이 전부 설치가 안되더라고요.. (ㅋㅋㅋㅋㅋㅋ) 그래서 좀 구글링을 해보니 이 사양에 설치할만한 리눅스 배포판은 크게 Xubuntu, Lubuntu로 나뉘는 듯 했어요. 근데! 그 마저도 32bit는 지원이 예전에 끊겼더라고요..^^ 최종적으로 설치한 배포판은 Lubuntu 18.04입니다.\n32bit를 지원하는 가장 최신 OS였거든요ㅋㅋㅋㅋㅋ.. 간단하게 프로그램 몇 개 설치하고 써봤는데 텍스트 작업, 동영상 스트리밍, 인터넷 서핑 용도로는 진짜 쾌적했어요.\n상태만 괜찮으면 들고다니면서 가볍게 쓸 수 있을 것 같다는 생각도 들더라고요ㅋㅋㅋ\n기본 입력기는 Fcitx였는데 이것도 빠릿해서 마음에 들었습니다ㅎㅎ\n진짜 신기했던게 와이파이 신호도 5G 까지 잡더라고요? 최근 나오는 노트북 중에도 2.4가 최대인 노트북도 많은데 말이죠.\n다만 연식이 되다보니 (거진 16년?) 화면 상태도 좀 많이 오락가락 하고 배터리도 사실상 거의 방전인듯 했어요.\n화면 문제는 제가 예상하기로는 백라이트가 문제인 것 같은데 이 사양을 수리해서 쓰기도 좀 그러니 그냥 재밌는 경험 했다고 생각하고 추억으로 남겨두려고요 ㅎㅎ\n이 글도 지금 Q45로 쓰고 있는데요 리눅스 깔아서 쓰면 단일 작업은 진짜 생각보다 빠릿해서 쓸만해요 메인 컴퓨터도 게임/영상 작업하는 거 아니면 리눅스를 메인으로 쓰고 있던지라 불편함은 딱히 느끼지 못했고 무엇보다 인터넷에서만 보던 오래된 넷북? 노트북?을 실제로 보니 너무 신기했습니다!ㅋㅋㅋ 작은 12.1인치의 화면이 너무나도 귀여웠던..ㅎㅎ\n학년이 올라갈수록 노트북의 필요성을 뼈저리게 느끼고 있는데 언젠가 새로운 노트북을 장만하게 된다면 또 글 올려보도록 할게요!\n끝까지 봐주셔서 감사합니다! 공감과 댓글은 큰 힘이 됩니다 :D\n","permalink":"https://blog.yclk.me/posts/samsung-sens-q45-review/","summary":"삼성 SENS Q45 사용 후기","title":"삼성 SENS Q45 체험기 (Feat. Lubuntu 18.04)"},{"content":"안녕하세요! 루크입니다 :)\n이번 포스팅에선 깃허브 학생 인증을 하는 방법에 대해서 알아보도록 하겠습니다! 대학생을 대상으로 하는 포스팅은 많지만 중(고등)학생을 대상으로 하는 포스팅은 찾을 수 없어 작성하게 되었습니다.\n대학생에 비해서 중(고등)학생은 상대적으로 학생임을 인증할 수 있는 방법이 많지 않았습니다. 저는 재학 증명서를 통해 인증에 성공했고 오늘은 그 방법에 대해서 알아보겠습니다. 먼저 재학 증명서를 발급 받아보도록 하겠습니다.\n나이스 대국민 서비스에 접속한 다음, 홈에듀 민원 서비스를 클릭합니다. 본인의 학교가 소속된 교육청을 선택합니다. 제 경우는 대구광역시 교육청이었습니다. 홈에듀 민원서비스로 이동했으면 온라인 발급/신청을 클릭합니다. 이곳에서 학생 -\u0026gt; 영문 -\u0026gt; 재학증명서를 클릭합니다. 꼭 영문 재학증명서를 발급받으셔야 합니다 국문의 경우 심사조차 진행되지 않습니다. 공동인증서로 로그인을 해주셔야 하는데, 나이스용 인증서와 민간 인증서는 사용할 수 없습니다. 저의 경우는 인터넷 뱅킹 시 사용한 인증서를 사용하니 정상적으로 로그인이 되었습니다. 본인이 이용하는 은행 홈페이지에서 쉽게 발급받을 수 있습니다. PDF로 저장한 뒤 비밀번호를 제거하고 jpg파일로 변환해 주었습니다. 아무래도 민감한 개인 정보가 담겨 있다 보니 파이썬을 활용해 로컬에서 진행했습니다.\n1 2 3 4 5 6 #-*- coding:utf-8 -*- from pdf2image import convert_from_path file_name = \u0026#34;filename.pdf\u0026#34; pages = convert_from_path(\u0026#34;./source/\u0026#34; + file_name) for i, page in enumerate(pages): page.save(\u0026#34;./source/\u0026#34;+file_name+str(i)+\u0026#34;.jpg\u0026#34;, \u0026#34;JPEG\u0026#34;) 그리고 신청을 하기 전에 해야 할 마지막 설정이 있습니다. 바로 학교 이메일을 깃허브에 등록하는 것인데요, 먼저 깃허브 프로필 세팅으로 접속하도록 하겠습니다.\nAcces에서 Emails를 선택한 뒤 학교 이메일을 입력하겠습니다. 저의 경우는 학교에서 발급받은 Office 365 Students 이메일을 사용했습니다. 이제 정말로 깃허브 스튜던트 팩을 받아보도록 하겠습니다. 깃허브 에듀케이션 홈페이지로 접속하고 Sign up for Student Developer Pack을 클릭합니다. Get student benefits를 클릭합니다. 저는 이미 인증을 완료해서 아래와 같은 메시지가 뜨지만 처음 하시는 분이라면 뜨지 않을 겁니다. 학교 이메일을 선택하고 학교 이름과 적당한 깃허브 사용 목적을 적어줍시다. 그리고 서류를 제출하는 창이 뜨게 됩니다. 스크린샷을 찍지 못해 사진은 없지만 영문 재학 증명서의 경우 ~Enrollment를 선택하시면 됩니다. 서류를 업로드하고 제출을 누르면 아래와 같은 메시지가 나오게 됩니다. 확인 메일을 12일 안에 받을 수 있다고 하는데 저는 신청한 당일에 받았습니다. 신청이 승인되었다면 아래와 같은 이메일을 받아볼 수 있습니다! 이제 깃허브 프로 기능을 비롯한 학생 혜택을 사용할 수 있습니다. 지금까지 깃허브 학생 인증을 하는 방법에 대해서 알아보았습니다. 이 포스팅이 깃허브 학생 인증에 어려움을 겪는 중(고등)학생에게 도움이 되었으면 좋겠습니다. 끝까지 봐주셔서 감사합니다 공감과 댓글은 큰 힘이 됩니다 :D\n","permalink":"https://blog.yclk.me/posts/how-to-certificate-github-student-developer-pack/","summary":"🔥 중학생 또는 고등학생을 위한 깃허브(GitHub) 학생 인증 가이드","title":"GitHub 중(고등)학생 인증 하는 법 (Student Developer Pack)"}]